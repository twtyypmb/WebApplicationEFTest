// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationEFTest.Entity;

namespace WebApplicationEFTest.Migrations
{
    [DbContext(typeof(TestDBContext))]
    partial class TestDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplicationEFTest.Entity.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double>("Age")
                        .HasColumnName("age");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Sex")
                        .HasColumnName("sex");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<string>("UserId1")
                        .HasColumnName("user_id1");

                    b.Property<string>("UserId2")
                        .HasColumnName("user_id2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserRole", b =>
                {
                    b.HasOne("WebApplicationEFTest.Entity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("ForeignKey_UserRole_Role");

                    b.HasOne("WebApplicationEFTest.Entity.User", "User1")
                        .WithMany("UserRoles1")
                        .HasForeignKey("UserId1")
                        .HasConstraintName("ForeignKey_UserRole_User1");

                    b.HasOne("WebApplicationEFTest.Entity.User", "User2")
                        .WithMany("UserRoles2")
                        .HasForeignKey("UserId2")
                        .HasConstraintName("ForeignKey_UserRole_User2");
                });
#pragma warning restore 612, 618
        }
    }
}
