// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationEFTest.Entity;

namespace WebApplicationEFTest.Migrations
{
    [DbContext(typeof(TestDBContext))]
    [Migration("20190905083324_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplicationEFTest.Entity.LoginLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LoginTime");

                    b.Property<DateTime?>("LogoutTime");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginLog");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.OperateLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserId1");

                    b.Property<string>("UserId2");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("OperateLog");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CardType")
                        .HasAnnotation("MS_Description", "卡类型 ( 0 : 身份证; 1 : 就诊卡 )");

                    b.Property<string>("Name")
                        .HasAnnotation("MS_Description", "姓名");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Age");

                    b.Property<string>("Name");

                    b.Property<int>("Sex");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserExtraInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserExtraInfo");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleId");

                    b.Property<string>("UserIdCurrent");

                    b.Property<string>("UserIdParent");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserIdCurrent");

                    b.HasIndex("UserIdParent");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.LoginLog", b =>
                {
                    b.HasOne("WebApplicationEFTest.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.OperateLog", b =>
                {
                    b.HasOne("WebApplicationEFTest.Entity.User", "User1")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.HasOne("WebApplicationEFTest.Entity.User", "User2")
                        .WithMany()
                        .HasForeignKey("UserId2");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserExtraInfo", b =>
                {
                    b.HasOne("WebApplicationEFTest.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebApplicationEFTest.Entity.UserRole", b =>
                {
                    b.HasOne("WebApplicationEFTest.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("WebApplicationEFTest.Entity.User", "UserCurrent")
                        .WithMany()
                        .HasForeignKey("UserIdCurrent");

                    b.HasOne("WebApplicationEFTest.Entity.User", "UserParent")
                        .WithMany()
                        .HasForeignKey("UserIdParent");
                });
#pragma warning restore 612, 618
        }
    }
}
